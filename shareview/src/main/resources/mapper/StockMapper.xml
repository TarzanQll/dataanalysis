<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.blog.website.dao.ContentVoMapper">
    <resultMap id="BaseResultMap" type="com.my.blog.website.model.Vo.ContentVo">
        <result column="stockcode" jdbcType="VARCHAR" property="stockcode" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="slug" jdbcType="VARCHAR" property="slug" />
        <result column="created" jdbcType="INTEGER" property="created" />
        <result column="modified" jdbcType="INTEGER" property="modified" />
        <result column="author_id" jdbcType="INTEGER" property="authorId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="tags" jdbcType="VARCHAR" property="tags" />
        <result column="categories" jdbcType="VARCHAR" property="categories" />
        <result column="hits" jdbcType="INTEGER" property="hits" />
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum" />
        <result column="allow_comment" jdbcType="BIT" property="allowComment" />
        <result column="allow_ping" jdbcType="BIT" property="allowPing" />
        <result column="allow_feed" jdbcType="BIT" property="allowFeed" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.my.blog.website.model.Po.Stock">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>
    <sql id="Base_Column_List">
        stockcode, title, slug, created, modified, author_id, type, status, tags, categories, hits,
        comments_num, allow_comment, allow_ping, allow_feed
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from stock
        where stockcode = #{stockcode,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from stock
        where stockcode = #{stockcode,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.my.blog.website.model.Po.Stock" useGeneratedKeys="true" keyProperty="stockcode">
        insert into stock (stockcode, title, slug,
        created, modified, author_id,
        type, status, tags,
        categories, hits, comments_num,
        allow_comment, allow_ping, allow_feed,
        content)
        values (#{stockcode,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{slug,jdbcType=VARCHAR},
        #{created,jdbcType=INTEGER}, #{modified,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER},
        #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
        #{categories,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, #{commentsNum,jdbcType=INTEGER},
        #{allowComment,jdbcType=BIT}, #{allowPing,jdbcType=BIT}, #{allowFeed,jdbcType=BIT},
        #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.my.blog.website.model.Po.Stock" useGeneratedKeys="true" keyProperty="stockcode">
        insert into stock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stockcode != null">
                stockcode,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="slug != null">
                slug,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="modified != null">
                modified,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="categories != null">
                categories,
            </if>
            <if test="hits != null">
                hits,
            </if>
            <if test="commentsNum != null">
                comments_num,
            </if>
            <if test="allowComment != null">
                allow_comment,
            </if>
            <if test="allowPing != null">
                allow_ping,
            </if>
            <if test="allowFeed != null">
                allow_feed,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stockcode != null">
                #{cid,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                #{slug,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                #{modified,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.my.blog.website.model.Po.Stock">
        update stock
        <set>
            <if test="stockcode != null">
                title = #{stockcode,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                modified = #{modified,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                comments_num = #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                allow_ping = #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                allow_feed = #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where stockcode = #{stockcode,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.my.blog.website.model.Po.Stock">
        update stock
        set stockcode = #{stockcode,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        slug = #{slug,jdbcType=VARCHAR},
        created = #{created,jdbcType=INTEGER},
        modified = #{modified,jdbcType=INTEGER},
        author_id = #{authorId,jdbcType=INTEGER},
        type = #{type,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        tags = #{tags,jdbcType=VARCHAR},
        categories = #{categories,jdbcType=VARCHAR},
        hits = #{hits,jdbcType=INTEGER},
        comments_num = #{commentsNum,jdbcType=INTEGER},
        allow_comment = #{allowComment,jdbcType=BIT},
        allow_ping = #{allowPing,jdbcType=BIT},
        allow_feed = #{allowFeed,jdbcType=BIT},
        content = #{content,jdbcType=LONGVARCHAR}
        where stockcode = #{stockcode,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.my.blog.website.model.Po.Stock">
        update stock
        set stockcode = #{stockcode,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        slug = #{slug,jdbcType=VARCHAR},
        created = #{created,jdbcType=INTEGER},
        modified = #{modified,jdbcType=INTEGER},
        author_id = #{authorId,jdbcType=INTEGER},
        type = #{type,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        tags = #{tags,jdbcType=VARCHAR},
        categories = #{categories,jdbcType=VARCHAR},
        hits = #{hits,jdbcType=INTEGER},
        comments_num = #{commentsNum,jdbcType=INTEGER},
        allow_comment = #{allowComment,jdbcType=BIT},
        allow_ping = #{allowPing,jdbcType=BIT},
        allow_feed = #{allowFeed,jdbcType=BIT}
        where stockcode = #{stockcode,jdbcType=VARCHAR}
    </update>


    <resultMap id="archiveBoMap" type="com.my.blog.website.model.Bo.ArchiveBo">
        <id column="date" property="date"/>
        <result column="count" property="count"/>
    </resultMap>

    <select id="findReturnArchiveBo" resultMap="archiveBoMap">
        select FROM_UNIXTIME(created, '%Y年%m月') as date, count(*) as count from stock where type = 'post' and status = 'publish' group by date order by date desc
    </select>


    <select id="findByCatalog" resultMap="BaseResultMap" parameterType="Integer">
        select a.*
        from stock a left join t_relationships b on a.stockcode = b.stockcode
        where b.mid = #{value} and a.status = 'publish' and a.type = 'post'
        order by a.created desc
    </select>
</mapper>